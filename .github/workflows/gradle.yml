---
name: Gradle

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  build:
    strategy:
      matrix:
        java: [1.8, 11]
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      gradle_version: 5.2.1 # set to empty to build with most recent version of gradle
      gradle_commands: build # default is build
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Wrap with specified version
        run: gradle wrapper --gradle-version=${{ env.gradle_version }}
        if: ${{ env.gradle_version != '' }}
      - name: Wrap without version
        run: gradle wrapper
        if: ${{ env.gradle_version == '' }}
      - name: Run commands
        run: ./gradlew ${{ env.gradle_commands }}
      - name: Create a release
        if: startsWith(matrix.os, 'ubuntu') && startsWith(github.ref, 'refs/tags') && ${{ matrix.java }} == 1.8
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      - name: Build Executable
        if: startsWith(matrix.os, 'windows') && startsWith(github.ref, 'refs/tags') && ${{ matrix.java }} == 1.8
        run: |
          choco uninstall innosetup
          choco install innosetup --version=5.6.1
          ./gradlew packageApplicationExe
          ./gradlew packageImporterApplicationExe
      - name: Build Dmg
        if: startsWith(matrix.os, 'macos') && startsWith(github.ref, 'refs/tags') && ${{ matrix.java }} == 1.8
        run: |
          brew cask install zulu8
          export JAVA_HOME='/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home'
          export PATH=$JAVA_HOME/bin:$PATH
          ./gradlew packageApplicationDmg
          ./gradlew packageImporterApplicationDmg
      - name: Upload zip to release
        if: startsWith(matrix.os, 'ubuntu') && startsWith(github.ref, 'refs/tags') && ${{ matrix.java }} == 1.8
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/distributions/OMERO*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
      - name: Upload jar to release
        if: startsWith(matrix.os, 'ubuntu') && startsWith(github.ref, 'refs/tags') && ${{ matrix.java }} == 1.8
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/libs/omero_*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
      - name: Upload insight artifacts to release
        if: startsWith(matrix.os, 'ubuntu') != true && startsWith(github.ref, 'refs/tags') && ${{ matrix.java }} == 1.8
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file:  build/packaged/main/bundles/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
      - name: Upload importer artifacts to release
        if: startsWith(matrix.os, 'ubuntu') != true && startsWith(github.ref, 'refs/tags')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file:  build/packaged/installImporterDist/bundles/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
